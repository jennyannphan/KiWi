% KiWi |Kinetics Kiwi| 
function KiWi_03
%% %%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Configure frame
%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%
h.fig3 = figure('MenuBar', 'none','units','pixels','Position', [0 0 1280 750],... % [x,y,width, height]
    'name','KiWi | Kinetics KiWi | Costume fitting','numbertitle','off','Resize', 'off');
tgroup = uitabgroup('Parent', h.fig3,'units','pixels','Position', [0 0 1280 750]); 

% Define tabs
tab1 = uitab('Parent', tgroup, 'Title', '1| Fitting frames');
tab2 = uitab('Parent', tgroup, 'Title', '2| Steady state parameters');
tab3 = uitab('Parent', tgroup, 'Title', '3| Linearized fit values');

%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%
%TAB1: LINEARIZED PLOTS - BEST FIT
%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Define buttons:
handles.button_best_fit = uicontrol('Parent', tab1,...
    'Style','pushbutton','String','Start frame',...
    'Position',[110 650 90 25], 'Callback', {@get_start_frame}); % calculate parameters at best fit
         
handles.button_steady_state_para = uicontrol('Parent', tab1,...
    'Style','pushbutton','String','End frame',...
    'Position',[110 620 90 25], 'Callback', {@get_end_frame}); %[20 620 180 25]

handles.editbox_frame_start = uicontrol('Parent', tab1, 'style','edit',...
    'units','pixels',...
    'position',[20 650 85 24],...  
    'string','insert a number',...
    'foregroundcolor','[0.3176 0.4745 1]') ;
        
handles.editbox_frame_end = uicontrol('Parent', tab1, 'style','edit',...
    'units','pixels',...
    'position',[20 620 85 24],...  
    'string','insert a number',...
    'foregroundcolor','[0.3176 0.4745 1]');

handles.button_steady_state_para = uicontrol('Parent', tab1,...
    'Style','pushbutton','String','Compute costume fit',...
    'Position',[20 590 180 25], 'Callback', 'linear_fit_calculator_costumeFit'); 

handles.button_steady_state_para = uicontrol('Parent', tab1,...
    'Style','pushbutton','String','Display plots of costume fits',...
    'Position',[20 540 180 25], 'Callback', {@display_costume_fit}); 

%% functions
    function get_start_frame(source, eventdata)
      s=  str2double(get(handles.editbox_frame_start, 'string'));
       assignin('base', 'FrameStart_CostumeFit', s);
    end

%% functions
    function get_end_frame(source, eventdata)
      s=  str2double(get(handles.editbox_frame_end, 'string'));
       assignin('base', 'FrameEnd_CostumeFit',  s);
    end

%% Define axes   
handles.ax_N1 = axes('Parent', tab1 , 'units', 'pixels', 'Position',[250 410 300 250]);
handles.ax_N2 = axes('Parent', tab1 ,'units', 'pixels', 'Position',[250 60 300 250]);
handles.ax_P1 = axes('Parent', tab1 , 'units', 'pixels', 'Position',[600 410 300 250]);
handles.ax_P2 = axes('Parent', tab1 , 'units', 'pixels', 'Position',[600 60 300 250]);
handles.ax_P3 = axes('Parent', tab1 , 'units', 'pixels', 'Position',[950 410 300 250]);
handles.ax_P4 = axes('Parent', tab1 , 'units', 'pixels', 'Position',[950 60 300 250]);


%% Set graph titles 
  set(get(handles.ax_N1, 'Title'), 'String', 'N1');
  set(get(handles.ax_N2, 'Title'), 'String', 'N2');
  set(get(handles.ax_P1, 'Title'), 'String', 'P1');
  set(get(handles.ax_P2, 'Title'), 'String', 'P2');
  set(get(handles.ax_P3, 'Title'), 'String', 'P3');
  set(get(handles.ax_P4, 'Title'), 'String', 'P4');

 %% Set axes titles for dynamic parameters (Upper row)
 set(get(handles.ax_N2, 'XLabel'), 'String', '|Kappa|      \kappa [ml cm^{-3} min^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_N2, 'YLabel'), 'String', '|Vol|     \nu [ml cm^{-3}]', 'FontSize', 10, 'FontName', 'Arial');     
 set(get(handles.ax_P2, 'XLabel'), 'String', '|1/Kappa|     \kappa^{-1} [min cm^{3} ml^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P2, 'YLabel'), 'String', '|Theta|     \Theta [min]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P4, 'XLabel'), 'String', '|1/Theta|     \Theta^{-1} [min^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P4, 'YLabel'), 'String', '|1/Vol|     \nu^{-1} [cm{3} ml^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 
 %% Set axes titles for RECIPROCAL dynamic parameters (Lower row)
 set(get(handles.ax_N1, 'XLabel'), 'String', '|Vol|     \nu [ml cm^{-3}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_N1, 'YLabel'), 'String', '|Kappa|      \kappa [ml cm^{-3} min^{-1}]', 'FontSize', 10, 'FontName', 'Arial');     
 set(get(handles.ax_P1, 'XLabel'), 'String', '|Theta|     \Theta [min]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P1, 'YLabel'), 'String', '|1/Kappa|     \kappa^{-1} [min cm^{3} ml^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P3, 'XLabel'), 'String', '|1/Vol|     \nu^{-1} [cm{3} ml^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P3, 'YLabel'), 'String', '|1/Theta|     \Theta^{-1} [min^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 
    function display_costume_fit(source,eventdata) % calculates time window of best linear fit
     %% get dynamic parameters:
     kappa = evalin('base','dynamic.kappa');
     theta = evalin('base','dynamic.theta');
     vol= evalin ('base','dynamic.vol');
     
     kappa_reciproc = evalin ('base','dynamic.kappa_reciproc');
     theta_reciproc = evalin ('base','dynamic.theta_reciproc');
     vol_reciproc = evalin ('base','dynamic.vol_reciproc');
        
%% get yFitted parameters: 
     y_N2_cf = evalin('base','costumeFit.yFitted.N2');      %vol fitted
     y_P2_cf =evalin('base','costumeFit.yFitted.P2');       %theta fitted
     y_P4_cf =evalin('base','costumeFit.yFitted.P4');       %vol_reciproc fitted 
     
     y_N1_cf =evalin('base','costumeFit.yFitted.N1');       %kappa fitted
     y_P1_cf=evalin('base','costumeFit.yFitted.P1');        %kappa_reciproc fitted
     y_P3_cf=evalin('base','costumeFit.yFitted.P3');        %theta_reciproc fitted
     
%% define costume fit frames (upper row):
     FrameStart_CostumeFit= evalin ('base','costumeFit.frameConfig.FrameStart_CostumeFit');
     FrameEnd_CostumeFit = evalin ('base','costumeFit.frameConfig.FrameEnd_CostumeFit');
         
%% plot N1 cumming 1993:         
[pax,pLine1,pLine2] = plotyy(handles.ax_N1,...
         vol(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         kappa(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         vol(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         y_N1_cf);
     
set(pLine1, 'marker', 'o',...
            'markersize',2.5,...
            'linewidth',2,...
            'linestyle', 'none');
        
set(pLine2, 'linestyle', '-','linewidth',1);
set(pax(2),'ytick',[]);        
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%        
     %% plot N2 gjedde 2000:   
[pax,pLine1,pLine2] = plotyy(handles.ax_N2,...
         kappa(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         vol(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         kappa(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         y_N2_cf);
     
set(pLine1, 'marker', 'o',...
            'markersize',2.5,...
            'linewidth',2,...
            'linestyle', 'none');
        
set(pLine2, 'linestyle', '-','linewidth',1);
set(pax(2),'ytick',[]);
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% plot P1 Gjedde 1982:        

[pax,pLine1,pLine2] = plotyy(handles.ax_P1,...
         theta(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         kappa_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         theta(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         y_P1_cf);
set(pLine1, 'marker', 'o',...
            'markersize',2.5,...
            'linewidth',2,...
            'linestyle', 'none');
        
set(pLine2, 'linestyle', '-','linewidth',1);
set(pax(2),'ytick',[]);                      
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% plot P2 logan 1990
[pax,pLine1,pLine2] = plotyy(handles.ax_P2,...
         kappa_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         theta(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         kappa_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         y_P2_cf);
     
set(pLine1, 'marker', 'o',...
            'markersize',2.5,...
            'linewidth',2,...
            'linestyle', 'none');
        
set(pLine2, 'linestyle', '-','linewidth',1);
set(pax(2),'ytick',[]);   
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% plot P3 Reith 1990:        

[pax,pLine1,pLine2] = plotyy(handles.ax_P3,...
         vol_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         theta_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         vol_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         y_P3_cf);
set(pLine1, 'marker', 'o',...
            'markersize',2.5,...
            'linewidth',2,...
            'linestyle', 'none');
        
set(pLine2, 'linestyle', '-','linewidth',1);
set(pax(2),'ytick',[]);
         
%% plot P4 Nahimi 2015:     
[pax,pLine1,pLine2] = plotyy(handles.ax_P4,...
         theta_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         vol_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         theta_reciproc(FrameStart_CostumeFit:FrameEnd_CostumeFit,:),...
         y_P4_cf);
set(pLine1, 'marker', 'o',...
            'markersize',2.5,...
            'linewidth',2,...
            'linestyle', 'none');
        
set(pLine2, 'linestyle', '-','linewidth',1);
set(pax(2),'ytick',[]);   
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                

    handle_legend = evalin('base','ans.name');
    legend(handles.ax_P3,handle_legend, 'Location', 'none', [75 150 1 1]) ;%[20 620 180 25] 
    
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% redefine axes and title 
%Set graph titles 
 set(get(handles.ax_N1, 'Title'), 'String', 'N1');
 set(get(handles.ax_N2, 'Title'), 'String', 'N2');
 set(get(handles.ax_P1, 'Title'), 'String', 'P1');
 set(get(handles.ax_P2, 'Title'), 'String', 'P2');
 set(get(handles.ax_P4, 'Title'), 'String', 'P4');
 set(get(handles.ax_P3, 'Title'), 'String', 'P3');

 %% Set axes titles for dynamic parameters (Upper row)
 set(get(handles.ax_N2, 'XLabel'), 'String', '|Kappa|      \kappa [ml cm^{-3} min^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_N2, 'YLabel'), 'String', '|Vol|     \nu [ml cm^{-3}]', 'FontSize', 10, 'FontName', 'Arial');     
 set(get(handles.ax_P2, 'XLabel'), 'String', '|1/Kappa|     \kappa^{-1} [min cm^{3} ml^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P2, 'YLabel'), 'String', '|Theta|     \Theta [min]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P4, 'XLabel'), 'String', '|1/Theta|     \Theta^{-1} [min^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P4, 'YLabel'), 'String', '|1/Vol|     \nu^{-1} [cm{3} ml^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 
 %% Set axes titles for RECIPROCAL dynamic parameters (Lower row)
 set(get(handles.ax_N1, 'XLabel'), 'String', '|Vol|     \nu [ml cm^{-3}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_N1, 'YLabel'), 'String', '|Kappa|      \kappa [ml cm^{-3} min^{-1}]', 'FontSize', 10, 'FontName', 'Arial');     
 set(get(handles.ax_P1, 'XLabel'), 'String', '|Theta|     \Theta [min]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P1, 'YLabel'), 'String', '|1/Kappa|     \kappa^{-1} [min cm^{3} ml^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P3, 'XLabel'), 'String', '|1/Vol|     \nu^{-1} [cm{3} ml^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
 set(get(handles.ax_P3, 'YLabel'), 'String', '|1/Theta|     \Theta^{-1} [min^{-1}]', 'FontSize', 10, 'FontName', 'Arial');
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%
%TAB2: SHOW STEADY STATE DATA
%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% define buttons
handles.button = uicontrol('Parent', tab2, 'Style','pushbutton',...
    'String','Compute steady state parameters',...
    'Position',[20 650 180 25], 'Callback', 'steady_state_parameters_calculator_costumeFit'); % [x,y,width, height]

handles.button = uicontrol('Parent', tab2, 'Style','pushbutton',...
    'String','Display steady state parameters',...
    'Position',[20 620 180 25], 'Callback', {@display_steady_state_parameters_costumeFit}); % [x,y,width, height]

%% Define text 
handles.heading = uicontrol('Parent', tab2, 'Style','text',...
    'String','Volume of distribution',...
    'fontsize', 10, ...
    'fontweight', 'bold',...
    'horizontalAlignment', 'left',...
    'Position',[20 560 150 25]); % [x,y,width, height]

handles.heading = uicontrol('Parent', tab2, 'Style','text',...
    'String','Rate constant K1',...
    'fontsize', 10, ...
    'fontweight', 'bold',...
    'horizontalAlignment', 'left',...
    'Position',[20 360 150 25]); % [x,y,width, height]

handles.heading = uicontrol('Parent', tab2, 'Style','text',...
    'String','Rate constant k2',...
    'fontsize', 10, ...
    'fontweight', 'bold',...
    'horizontalAlignment', 'left',...
    'Position',[20 160 150 25]); % [x,y,width, height]


%% define table V_T
columnname=evalin('base','ans.name');

handles.uitable_VT = uitable('Parent', tab2,...
        'ColumnName', columnname,...
        'rowname', {'Gjedde2000', 'Logan 1990', 'P4 plot',....
        'Cumming 1993', 'Gjedde 1982', 'Reith 1990'},...
        'Position',[20 430 1150 130]);
% define table K1
handles.uitable_K1 = uitable('Parent', tab2,...
        'ColumnName', columnname,...
        'rowname', {'Gjedde2000', 'Logan 1990', 'P4 plot',....
        'Cumming 1993', 'Gjedde 1982', 'Reith 1990'},...
        'Position',[20 230 1150 130]);
     
% define table k2
handles.uitable_k2 = uitable('Parent', tab2,...
        'ColumnName', columnname,...
        'rowname', {'Gjedde2000', 'Logan 1990', 'P4 plot',....
        'Cumming 1993', 'Gjedde 1982', 'Reith 1990'},...
        'Position',[20 30 1150 130]);
    
    function display_steady_state_parameters_costumeFit (source,eventdata)
        V_T= evalin('base', 'costumeFit.steadyState.V_T.all_plots');
        K1=evalin('base', 'costumeFit.steadyState.K1.all_plots');
        k2=evalin('base', 'costumeFit.steadyState.k2.all_plots');
        
        set(handles.uitable_VT, 'Visible', 'on');
        set(handles.uitable_VT, 'Data', V_T, 'ColumnFormat', {'numeric'});
      
        set(handles.uitable_K1, 'Visible', 'on');
        set(handles.uitable_K1, 'Data', K1, 'ColumnFormat', {'numeric'});
       
        set(handles.uitable_k2, 'Visible', 'on');
        set(handles.uitable_k2, 'Data', k2, 'ColumnFormat', {'numeric'});     
    end


%% %%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%
%TAB3: SHOW LINEARIZED FIT VALUES
%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%-o-%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% define buttons
handles.button = uicontrol('Parent', tab3, 'Style','pushbutton',...
    'String','Compute linearized fit values',...
    'Position',[20 650 180 25], 'Callback', 'linearized_parameter_calculation_costumeFit'); % [x,y,width, height]

handles.button = uicontrol('Parent', tab3, 'Style','pushbutton',...
    'String','Display steady state parameters',...
    'Position',[20 620 180 25], 'Callback', {@display_linearized_parameters_costumeFit}); % [x,y,width, height]

%% define table Slope
columnname=evalin('base','ans.name');

handles.uitable_slope = uitable('Parent', tab3,...
        'ColumnName', columnname,...
        'rowname', {'Gjedde2000', 'Logan 1990', 'P4 plot',....
        'Cumming 1993', 'Gjedde 1982', 'Reith 1990'},...
        'Position',[20 430 1150 130]);
    
% define table yIntercept
handles.uitable_yIntercept = uitable('Parent', tab3,...
        'ColumnName', columnname,...
        'rowname', {'Gjedde2000', 'Logan 1990', 'P4 plot',....
        'Cumming 1993', 'Gjedde 1982', 'Reith 1990'},...
        'Position',[20 230 1150 130]);

% define table RSquared
handles.uitable_RSquared = uitable('Parent', tab3,...
        'ColumnName', columnname,...
        'rowname', {'Gjedde2000', 'Logan 1990', 'P4 plot',....
        'Cumming 1993', 'Gjedde 1982', 'Reith 1990'},...
        'Position',[20 30 1150 130]);    
        
%% callback function to display all linearized data
    function display_linearized_parameters_costumeFit (source,eventdata)
        slope=evalin('base', 'costumeFit.slope.all_slopes');
        yIntercept=evalin('base', 'costumeFit.yIntercept.all_yIntercepts');
        rsq =evalin('base', 'costumeFit.steadyState.rsq.all_plots');

        set(handles.uitable_slope, 'Visible', 'on');
        set(handles.uitable_slope, 'Data', slope, 'ColumnFormat', {'numeric'});
        
        set(handles.uitable_yIntercept, 'Visible', 'on');
        set(handles.uitable_yIntercept, 'Data', yIntercept, 'ColumnFormat', {'numeric'});
        
        set(handles.uitable_RSquared, 'Visible', 'on');
        set(handles.uitable_RSquared, 'Data', rsq, 'ColumnFormat', {'numeric'});
    end

%% Define text 
handles.heading = uicontrol('Parent', tab3, 'Style','text',...
    'String','Slope',...
    'fontsize', 10, ...
    'fontweight', 'bold',...
    'horizontalAlignment', 'left',...
    'Position',[20 560 150 25], 'Callback', 'steady_state_parameters_calculator'); % [x,y,width, height]

handles.heading = uicontrol('Parent', tab3, 'Style','text',...
    'String','Y-intercept',...
    'fontsize', 10, ...
    'fontweight', 'bold',...
    'horizontalAlignment', 'left',...
    'Position',[20 360 150 25], 'Callback', 'steady_state_parameters_calculator'); % [x,y,width, height]

handles.heading = uicontrol('Parent', tab3, 'Style','text',...
    'String','R-squared',...
    'fontsize', 10, ...
    'fontweight', 'bold',...
    'horizontalAlignment', 'left',...
    'Position',[20 160 150 25], 'Callback', 'steady_state_parameters_calculator'); % [x,y,width, height]


end
